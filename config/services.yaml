# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: true
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Service\:
        public: true
        resource: '../src/Service/'
        
    App\Repository\:
        public: true
        resource: '../src/Repository/'
        
    Symfony\Component\Security\Http\Authentication\AuthenticationUtils:
        public: true
    
    Symfony\Component\Security\Core\Exception\AccessDeniedException:
        public: true
        
    Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener:        
        public: true

    Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener:
        public: true

    Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser:
        public: true

    Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager:
        public: true
        
    sensio_framework_extra.view.listener:
        alias: 'Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener'
    sensio_framework_extra.converter.listener: 
        alias: 'Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener'
    sensio_framework_extra.view.guesser:
        alias: 'Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener'
